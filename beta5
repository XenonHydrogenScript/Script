local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local PlayerGui = Players.LocalPlayer:WaitForChild("PlayerGui")
local SoundService = game:GetService("SoundService")
 
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "CustomNotifications"
ScreenGui.Parent = PlayerGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
 
local NotificationStyles = {
Error = {
Icon = "rbxassetid://131198217929605",
BackgroundColor = Color3.fromRGB(50, 20, 20),
TitleColor = Color3.fromRGB(255, 85, 85),
Sound = "rbxassetid://8499261098"
},
Success = {
Icon = "rbxassetid://6031068421",
BackgroundColor = Color3.fromRGB(20, 50, 20),
TitleColor = Color3.fromRGB(85, 255, 85),
Sound = "rbxassetid://4590662766"
},
}
 
local activeNotifications = {}
 
local function createNotification(title, text, duration, options)
local options = options or {}
local icon = options.Icon
local bgColor = options.BackgroundColor or Color3.fromRGB(40, 40, 40)
local titleColor = options.TitleColor or Color3.fromRGB(255, 85, 85)
local soundId = options.Sound
 
local notification = Instance.new("Frame")
notification.Size = UDim2.new(0, 350, 0, 80)
notification.Position = UDim2.new(1, 20, 1, -100)
notification.BackgroundColor3 = bgColor
notification.BorderSizePixel = 0
notification.Parent = ScreenGui
notification.ZIndex = 100
notification.ClipsDescendants = true
 
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 12)
corner.Parent = notification
 
local shadow = Instance.new("UIStroke")
shadow.Color = Color3.new(0, 0, 0)
shadow.Transparency = 0.8
shadow.Thickness = 2
shadow.Parent = notification
 
if icon then
local iconImage = Instance.new("ImageLabel")
iconImage.Size = UDim2.new(0, 30, 0, 30)
iconImage.Position = UDim2.new(0, 15, 0.5, -15)
iconImage.Image = icon
iconImage.BackgroundTransparency = 1
iconImage.Parent = notification
end
 
local titleLabel = Instance.new("TextLabel")
titleLabel.Text = title
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextColor3 = titleColor
titleLabel.TextSize = 18
titleLabel.Position = UDim2.new(0, icon and 60 or 20, 0, 15)
titleLabel.Size = UDim2.new(1, -40, 0, 25)
titleLabel.BackgroundTransparency = 1
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Parent = notification
 
local textLabel = Instance.new("TextLabel")
textLabel.Text = text
textLabel.Font = Enum.Font.Gotham
textLabel.TextColor3 = Color3.new(0.9, 0.9, 0.9)
textLabel.TextSize = 14
textLabel.Position = UDim2.new(0, icon and 60 or 20, 0, 40)
textLabel.Size = UDim2.new(1, -40, 0, 30)
textLabel.BackgroundTransparency = 1
textLabel.TextXAlignment = Enum.TextXAlignment.Left
textLabel.TextWrapped = true
textLabel.Parent = notification
 
local progressBar = Instance.new("Frame")
progressBar.Size = UDim2.new(1, -20, 0, 3)
progressBar.Position = UDim2.new(0, 10, 1, -8)
progressBar.BackgroundColor3 = titleColor
progressBar.BorderSizePixel = 0
progressBar.Parent = notification
 
local progressCorner = Instance.new("UICorner")
progressCorner.CornerRadius = UDim.new(1, 0)
progressCorner.Parent = progressBar
 
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 20, 0, 20)
closeButton.Position = UDim2.new(1, -25, 0, 10)
closeButton.BackgroundTransparency = 1
closeButton.Text = "关闭"
closeButton.TextColor3 = Color3.new(1, 1, 1)
closeButton.TextSize = 16
closeButton.Font = Enum.Font.GothamBold
closeButton.Parent = notification
 
if soundId then
local sound = Instance.new("Sound")
sound.SoundId = soundId
sound.Volume = 3
sound.Parent = notification
sound:Play()
sound.Ended:Connect(function()
sound:Destroy()
end)
end
 
local slideIn = TweenService:Create(
notification,
TweenInfo.new(0.5, Enum.EasingStyle.Quint),
{Position = UDim2.new(1, -370, 1, -100)}
)
slideIn:Play()
 
TweenService:Create(
progressBar,
TweenInfo.new(duration or 5, Enum.EasingStyle.Linear),
{Size = UDim2.new(0, 0, 0, 3)}
):Play()
 
local slideOut = TweenService:Create(
notification,
TweenInfo.new(0.5, Enum.EasingStyle.Quint),
{Position = UDim2.new(1, 20, 1, -100)}
)
 
closeButton.MouseButton1Click:Connect(function()
slideOut:Play()
slideOut.Completed:Wait()
notification:Destroy()
end)
 
task.wait(duration or 5)
slideOut:Play()
slideOut.Completed:Wait()
notification:Destroy()
end

local newLBLG = Instance.new("ScreenGui", game.CoreGui)
newLBLG.Name = "NewLBLG"
newLBLG.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
newLBLG.Enabled = true

local newLBL = Instance.new("TextLabel", newLBLG)
newLBL.Name = "NewLBL"
newLBL.BackgroundColor3 = Color3.new(1, 1, 1)
newLBL.BackgroundTransparency = 1
newLBL.BorderColor3 = Color3.new(0, 0, 0)
newLBL.AnchorPoint = Vector2.new(0.5, 1)
newLBL.Position = UDim2.new(0.5, 0, 1, -5)
newLBL.Size = UDim2.new(0, 150, 0, 30)
newLBL.Font = Enum.Font.GothamSemibold
newLBL.Text = "Fluorine star Script"
newLBL.TextColor3 = Color3.new(1, 1, 1)
newLBL.TextScaled = true
newLBL.TextSize = 14
newLBL.TextWrapped = true
newLBL.Visible = true
newLBL.TextStrokeColor3 = Color3.new(0, 0, 0)
newLBL.TextStrokeTransparency = 0.3

local RunService = game:GetService("RunService")
local hue = 0

RunService.Heartbeat:Connect(function(deltaTime)
    hue = (hue + deltaTime * 0.2) % 1
    newLBL.TextColor3 = Color3.fromHSV(hue, 1, 1)
end)

local lib = loadstring(game:HttpGet"https://raw.githubusercontent.com/XenonHydrogenScript/Script/refs/heads/main/beta2")()
local OpenUI = Instance.new("ScreenGui") 
local ImageButton = Instance.new("ImageButton") 
local UICorner = Instance.new("UICorner") 
local RunService = game:GetService("RunService")
local localPlayer = Players.LocalPlayer
local autoJumpEnabled = false
local uihide = false
local CoreGui = game:GetService("StarterGui")
local WardrobeHighlights = {}
local wardrobeEsp = false
local KeyChams = {}
local keyesp = false
local DoorHighlights = {}
local DoorEsp = false
local DoorTexts = {}
local GeneratorHighlights = {}
local GeneratorEsp = false
local ToolshedHighlights = {}
local ToolshedEsp = false
local ToolshedTexts = {}
local LotusPetalPickupHighlights = {}
local LotusPetalPickupEsp = false
local LotusPetalPickupTexts = {}
local SnaresHighlights = {}
local SnaresEsp = false
local SnaresTexts = {}
local GoldPileHighlights = {}
local GoldPileEsp = false
local GoldPileTexts = {}
local MonumentSpawnHighlights = {}
local MonumentSpawnEsp = false
local MonumentSpawnTexts = {}
local isNoSnares = false
local isNoMandrakes = false
local isNoGroundskeeper = false
local isBlockLightning = false
local isNoMonument = false
local createpart = false
local descendantAddedConn = nil
local SurgeCheck = pcall(function() return require(game.ReplicatedStorage.ModulesShared:FindFirstChild("SurgeCheck")) end) and require(game.ReplicatedStorage.ModulesShared.SurgeCheck) or {}
 local originalIsSheltered = SurgeCheck.IsCharacterSheltered or function() end
 local shieldConnection = nil
 local childAddedConnection = nil
 local targetSoundNames = {"SoundFly", "SoundCawLight", "SoundCaw"}
 local SnaresNames = {"Snares"}
 local MandrakesNames = {"Mandrakes", "Mandrake", "MandrakeHole"}
 local MonumentNames = {"MonumentSpawn", "MonumentEntity"}
 local ReplicatedStorage = game:GetService("ReplicatedStorage")
 local targetNames = {"Screech", "ScreechRetro", "EntityDisableScreech"}
 local InitializeNames = {"Animations"}
 local soundLoopConnection
local Players = game:GetService("Players")
local GuiService = game:GetService("GuiService")
local player = Players.LocalPlayer
local gui = player:WaitForChild("PlayerGui")
local Players = game:GetService("Players")
local workspace = game:GetService("Workspace")
local localPlayer = Players.LocalPlayer
local connection

--/99 Night/
local Workspace = game:GetService("Workspace")
local startTime = tick()
local timeout = 3
local items = Workspace:FindFirstChild("Items")
while not items and tick() - startTime < timeout do
    wait(0.1)
    items = Workspace:FindFirstChild("Items")
end
if items then
    print("OK")
else
    print("No Items File")
end

local medicalItems = {"绷带", "急救包"}
local selectedMedicalItems = {}

local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local torchLoop = nil

local plr = game.Players.LocalPlayer
local uis = game:GetService("UserInputService")
local rs = game:GetService("ReplicatedStorage")
local char = plr.Character or plr.CharacterAdded:Wait()

local function getMobs()
    local mobs = {}
    local mobNames = {}
    local index = 1
    for _, character in ipairs(workspace:WaitForChild("Characters"):GetChildren()) do
        if character.Name:match("^Lost Child") and character:GetAttribute("Lost") == true then
            table.insert(mobs, character)
            table.insert(mobNames, character.Name)
            index = index + 1
        end
    end
    return mobs, mobNames
end

local currentMobs, currentMobNames = getMobs()
local selectedMob = currentMobNames[1] or nil

local instantInteractEnabled = false
local instantInteractConnection
local originalHoldDurations = {}

--Bandage Esp Class
local BandageHighlights = {}
local BandageTexts = {}
local BandageEsp = false
--Pathfinding Class
local isCarrotEnabled=false
local isBerryEnabled=false;
local autoMoveCarrots

local function updateHitboxes()
    for i,v in pairs(workspace.Characters:GetChildren()) do
        local hrp = v:FindFirstChild("HumanoidRootPart")
        if hrp then
            local name = string.lower(v.Name)
            local shouldExpand = false
            
            if settings.hitboxes.wolves and (name:find("wolf") or name:find("alpha")) then
                shouldExpand = true
            elseif settings.hitboxes.rabbits and name:find("bunny") then
                shouldExpand = true  
            elseif settings.hitboxes.cultists and name:find("cultist") then
                shouldExpand = true
            end
            
            if shouldExpand then
                hrp.Size = Vector3.new(settings.hitboxes.size, settings.hitboxes.size, settings.hitboxes.size)
                hrp.Transparency = settings.hitboxes.visible and 0.7 or 1
                hrp.CanCollide = false
                hrp.Color = Color3.new(1, 0, 0)
                hrp.Material = Enum.Material.ForceField
            end
        end
    end
end

OpenUI.Name = "OpenUI" 
OpenUI.Parent = game.CoreGui 
OpenUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling 

ImageButton.Parent = OpenUI 
 local uiGradient = Instance.new("UIGradient")
 uiGradient.Color = ColorSequence.new({
     ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 255, 0)),
     ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 255))
 })
uiGradient.Rotation = 0 
uiGradient.Parent = ImageButton
ImageButton.BackgroundTransparency = 0.5
ImageButton.Position = UDim2.new(0.0235790554, 0, 0.466334164, 0)
ImageButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0) 
 ImageButton.BackgroundTransparency = 0.5
ImageButton.Position = UDim2.new(0.0235790554, 0, 0.466334164, 0) 
ImageButton.Size = UDim2.new(0, 50, 0, 50) 
ImageButton.Image = "rbxassetid://8201198208" 
ImageButton.Draggable = true

UICorner.CornerRadius = UDim.new(0, 8) 
UICorner.Parent = ImageButton 

ImageButton.MouseButton1Click:Connect(function() 
  if uihide == false then
	uihide = true
	game.CoreGui.ui.Main:TweenSize(UDim2.new(0, 0, 0, 0),"In","Quad",0.4,true)
  else
	uihide = false
	game.CoreGui.ui.Main:TweenSize(UDim2.new(0, 560, 0, 319),"Out","Quad",0.4,true)
  end 
end)


createNotification(
    "用户拥有访问权限",
    "脚本已加载...",
    3,
    NotificationStyles.Success
)

local win = lib:Window("Fluorine star V2.1", Color3.fromRGB(0, 255, 0), Enum.KeyCode.E)

local xx = win:Tab("| 信息 |",'16060333448')
local gn = win:Tab("| 功能 |",'16060333448')
local zs = win:Tab("| 自身 |",'16060333448')
local gm = win:Tab("| 购买 |",'16060333448')
local qt = win:Tab("| 其他 |",'16060333448')

gm:Label("-----忍者传奇-----")
gm:Button("故障: 觉醒的夜行者[绝版宠物]", function()
    game:GetService("ReplicatedStorage").cPetShopRemote:InvokeServer(game:GetService("ReplicatedStorage").cPetShopFolder:FindFirstChild("GLITCH: Awakened Nighthunter"))
    end)
gm:Button("上升千年水螅[绝版宠物]", function()
   game:GetService("ReplicatedStorage").cPetShopRemote:InvokeServer(game:GetService("ReplicatedStorage").cPetShopFolder:FindFirstChild("Rising Millenium Hydra"))
   end)
gm:Button("高超音速飞马[绝版宠物]", function()
   game:GetService("ReplicatedStorage").cPetShopRemote:InvokeServer(game:GetService("ReplicatedStorage").cPetShopFolder:FindFirstChild("Hypersonic Pegasus"))
   end)
gm:Button("内心黑暗九头蛇[绝版宠物]", function()
   game:GetService("ReplicatedStorage").cPetShopRemote:InvokeServer(game:GetService("ReplicatedStorage").cPetShopFolder:FindFirstChild("Inner Darkness Hydra"))
   end)
gm:Button("闪电小兔[绝版宠物]", function()
   game:GetService("ReplicatedStorage").cPetShopRemote:InvokeServer(game:GetService("ReplicatedStorage").cPetShopFolder:FindFirstChild("Lightning Bolt Bunny"))
   end)
gm:Button("雷击幻影[绝版宠物]", function()
   game:GetService("ReplicatedStorage").cPetShopRemote:InvokeServer(game:GetService("ReplicatedStorage").cPetShopFolder:FindFirstChild("Lightning Strike Phantom"))
   end)
gm:Button("赛博：远古大师幽灵[绝版宠物]", function()
   game:GetService("ReplicatedStorage").cPetShopRemote:InvokeServer(game:GetService("ReplicatedStorage").cPetShopFolder:FindFirstChild("CYBER: Ancient Master Wraith"))
   end)
gm:Button("损坏的元素Hydra[绝版宠物]", function()
   game:GetService("ReplicatedStorage").cPetShopRemote:InvokeServer(game:GetService("ReplicatedStorage").cPetShopFolder:FindFirstChild("Corrupted Elements Hydra"))
   end)
gm:Button("黑暗风暴元素九头蛇[绝版宠物]", function()
   game:GetService("ReplicatedStorage").cPetShopRemote:InvokeServer(game:GetService("ReplicatedStorage").cPetShopFolder:FindFirstChild("Darkstorm Elemental Hydra"))
   end)
gm:Button("阴影边缘小猫[绝版宠物]", function()
   game:GetService("ReplicatedStorage").cPetShopRemote:InvokeServer(game:GetService("ReplicatedStorage").cPetShopFolder:FindFirstChild("Shadows Edge Kitty"))
   end)
gm:Button("天蓝欧米茄飞马[绝版宠物]", function()
   game:GetService("ReplicatedStorage").cPetShopRemote:InvokeServer(game:GetService("ReplicatedStorage").cPetShopFolder:FindFirstChild("Azure Series Omega Pegasus"))
   end)
gm:Button("宇宙猎人龙[绝版宠物]", function()
   game:GetService("ReplicatedStorage").cPetShopRemote:InvokeServer(game:GetService("ReplicatedStorage").cPetShopFolder:FindFirstChild("Cosmic Hunter Dragon"))
   end)
gm:Button("蔚蓝神奇猫[绝版宠物]", function()
   game:GetService("ReplicatedStorage").cPetShopRemote:InvokeServer(game:GetService("ReplicatedStorage").cPetShopFolder:FindFirstChild("Azure Wonder Kitty"))
   end)
gm:Button("古代地狱猫[绝版宠物]", function()
   game:GetService("ReplicatedStorage").cPetShopRemote:InvokeServer(game:GetService("ReplicatedStorage").cPetShopFolder:FindFirstChild("Ancient Inferno Kitty"))
   end)
gm:Button("零度以下的冰霜九头蛇[绝版宠物]", function()
   game:GetService("ReplicatedStorage").cPetShopRemote:InvokeServer(game:GetService("ReplicatedStorage").cPetShopFolder:FindFirstChild("Sub-Zero Frost Hydra"))
   end)
gm:Button("终极超新星飞马[绝版宠物]", function()
   game:GetService("ReplicatedStorage").cPetShopRemote:InvokeServer(game:GetService("ReplicatedStorage").cPetShopFolder:FindFirstChild("Ultimate Supernova Pegasus"))
   end)
   
qt:Label("-----页面类-----")
qt:Toggle("夜间模式", false, function(state)
    if state then
        game:GetService("CoreGui")["ui"]:Destroy()
        game:GetService("CoreGui")["OpenUI"]:Destroy()
        game:GetService("CoreGui")["NewLBLG"]:Destroy()
        
        createNotification(
            "通知 : ",
            "夜间模式加载...",
            3,
            NotificationStyles.Success
        )
        
        task.wait(1)
        
        loadstring(game:HttpGet("https://raw.githubusercontent.com/XenonHydrogenScript/Script/refs/heads/main/Fluorine%20Star%20Night%20Mode.lua"))()
    end
end)

xx:Label("作者:Fluorstar")
xx:Label("服务器ID:" .. game.GameId .. ".")
xx:Button("关闭脚本", function()
    game:GetService("CoreGui")["ui"]:Destroy()
    game:GetService("CoreGui")["OpenUI"]:Destroy()
    game:GetService("CoreGui")["NewLBLG"]:Destroy()
    
    createNotification(
        "通知 : ",
        "脚本已关闭...",
        3,
        NotificationStyles.Success
    )
end)

zs:Label("-----通用-----")
zs:Button("获取坐标", function()
    task.spawn(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/HyScriptXlite/-/refs/heads/main/zbcs"))()
    end)
end)
zs:Toggle("自动跳跃", false, function(state)
    autoJumpEnabled = state
end)

local function getCharacter()
    return localPlayer.Character or localPlayer.CharacterAdded:Wait()
end

local function getHumanoid(character)
    return character:WaitForChild("Humanoid", 5)
end

RunService.RenderStepped:Connect(function()
    if not autoJumpEnabled then return end
    
    local character = getCharacter()
    local humanoid = getHumanoid(character)
    if not humanoid or humanoid.Health <= 0 then return end
    
    -- 检查可跳跃状态
    local currentState = humanoid:GetState()
    if currentState == Enum.HumanoidStateType.Running
        or currentState == Enum.HumanoidStateType.Landing
        or currentState == Enum.HumanoidStateType.Standing then
        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    end
end)

local espEnabled = false
local highlightStorage = Instance.new("Folder")
highlightStorage.Name = "Highlight_Storage"
highlightStorage.Parent = game:GetService("CoreGui")

zs:Toggle("ESP | 玩家", false, function(state)
    espEnabled = state
    if state then
        local function highlightPlayer(plr)
            local highlight = Instance.new("Highlight")
            highlight.Name = plr.Name
            highlight.FillColor = Color3.fromRGB(0, 128, 0)
            highlight.DepthMode = "AlwaysOnTop"
            highlight.FillTransparency = 0.5
            highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
            highlight.OutlineTransparency = 0
            highlight.Adornee = plr.Character
            highlight.Parent = highlightStorage

            plr.CharacterAdded:Connect(function(char)
                highlight.Adornee = char
            end)
        end

        for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
            if player ~= game.Players.LocalPlayer then
                highlightPlayer(player)
            end
        end

        game:GetService("Players").PlayerAdded:Connect(highlightPlayer)
    else
        for _, child in ipairs(highlightStorage:GetChildren()) do
            child:Destroy()
        end
    end
end)

zs:Button("Spy", function()
    getgenv().Spy="汉化Spy" loadstring(game:HttpGet("https://raw.githubusercontent.com/xiaopi77/xiaopi77/refs/heads/main/spy%E6%B1%89%E5%8C%96%20(1).txt"))()
end)
zs:Button("Dex V3", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/IlIlIlIlIlIlIlIlIlIlIlIlIlIlIlIl/Script/main/Tools/DarkDexV3.lua", true))()
end)
zs:Button("FE指令", function()
    loadstring(game:HttpGet(('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'),true))()
end)
zs:Button("工具挂", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Bebo-Mods/BeboScripts/main/StandAwekening.lua"))()
end)
zs:Button("无限连跳", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/V5PQy3y0", true))()
end)
zs:Button("反挂机", function()
    print("Anti Afk On")
		local vu = game:GetService("VirtualUser")
		game:GetService("Players").LocalPlayer.Idled:connect(function()
		   vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
		   wait(1)
		   vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
		end)
    end)
zs:Toggle("夜视", false, function(value)
    if value then
        game.Lighting.Ambient = Color3.new(1, 1, 1)
    else
        game.Lighting.Ambient = Color3.new(0, 0, 0)
    end
end)
zs:Button("阿尔宙斯V3", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/chillz-workshop/main/Arceus%20X%20V3"))()
end)
zs:Button("飞车V2 <沙豆汉化>", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Fish-Script/Flying-car-V2/main/Flying%20car%20V2"))()
end)
zs:Button("Backdoor.exe", function()
loadstring(game: HttpGet(('https://raw.githubusercontent.com/iK4oS/backdoor.exe/master/source.lua'),true))()
end)
gn:Label("-----凹凸世界-----")
gn:Button("获取能量球", function()
    task.spawn(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/KissxTay/caramelldansen/main/chinese%20event", true))()
    end)
end)
gn:Label("-----极速传奇-----")
gn:Button("传送至Jungle洞穴", function()
    local char = game.Players.LocalPlayer.Character
    if char and char:FindFirstChild("HumanoidRootPart") then
        char:MoveTo(Vector3.new(-15260, 240, 3783))
    end
end)
gn:Toggle("红色球体", false, function(state)
    local args = {
        [1] = "collectOrb",
        [2] = "Red Orb",
        [3] = "City"
    }
    local replicatedStorage = game:GetService("ReplicatedStorage")
    local orbEvent = replicatedStorage.rEvents.orbEvent
    local collectingCoroutine = nil
    
    if state then
        collectingCoroutine = task.spawn(function()
            while state do
                local success, err = pcall(function()
                    orbEvent:FireServer(unpack(args))
                end)
                task.wait(0.01)
            end
        end)
    else
        if collectingCoroutine then
            task.cancel(collectingCoroutine)
            collectingCoroutine = nil
        end
    end
end)
gn:Toggle("橙色球体", false, function(state)
    local args = {
        [1] = "collectOrb",
        [2] = "Orange Orb",
        [3] = "City"
    }
    local replicatedStorage = game:GetService("ReplicatedStorage")
    local orbEvent = replicatedStorage.rEvents.orbEvent
    local collectingCoroutine = nil
    
    if state then
        collectingCoroutine = task.spawn(function()
            while state do
                local success, err = pcall(function()
                    orbEvent:FireServer(unpack(args))
                end)
                task.wait(0.01)
            end
        end)
    else
        if collectingCoroutine then
            task.cancel(collectingCoroutine)
            collectingCoroutine = nil
        end
    end
end)
gn:Toggle("蓝色球体", false, function(state)
    local args = {
        [1] = "collectOrb",
        [2] = "Blue Orb",
        [3] = "City"
    }
    local replicatedStorage = game:GetService("ReplicatedStorage")
    local orbEvent = replicatedStorage.rEvents.orbEvent
    local collectingCoroutine = nil
    
    if state then
        collectingCoroutine = task.spawn(function()
            while state do
                local success, err = pcall(function()
                    orbEvent:FireServer(unpack(args))
                end)
                task.wait(0.01)
            end
        end)
    else
        if collectingCoroutine then
            task.cancel(collectingCoroutine)
            collectingCoroutine = nil
        end
    end
end)
gn:Toggle("经验球", false, function(state)
    local args = {
        [1] = "collectOrb",
        [2] = "Yellow Orb",
        [3] = "City"
    }
    local replicatedStorage = game:GetService("ReplicatedStorage")
    local orbEvent = replicatedStorage.rEvents.orbEvent
    local collectingCoroutine = nil
    
    if state then
        collectingCoroutine = task.spawn(function()
            while state do
                local success, err = pcall(function()
                    orbEvent:FireServer(unpack(args))
                end)
                task.wait(0.01)
            end
        end)
    else
        if collectingCoroutine then
            task.cancel(collectingCoroutine)
            collectingCoroutine = nil
        end
    end
end)
gn:Label("-----力量传奇-----")
gn:Button("传送至安全岛", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(7,3,108)
end)
gn:Button("传送至冰霜健身房", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2543,13,-410)
end)
gn:Button("传送至神话健身房", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2177,13,1070)
end)
gn:Button("传送至永恒健身房", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-6686,13,-1284)
end)
gn:Button("传送至传说健身房", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(4676,997,-3915)
end)
gn:Button("传送至肌肉之王", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-8554,22,-5642)
end)
gn:Button("收集宝石",function()
        jk = {}
for _, v in pairs(game:GetService("ReplicatedStorage").chestRewards:GetDescendants()) do
    if v.Name ~= "Light Karma Chest" or v.Name ~= "Evil Karma Chest" then
        table.insert(jk, v.Name)
    end
end
for i = 1, #jk do
    wait(2)
    game:GetService("ReplicatedStorage").rEvents.checkChestRemote:InvokeServer(jk[i])
end
    end)
gn:Toggle("自动重生", false, function(state)
    while state do
        task.wait(0.1) 
        game:GetService("ReplicatedStorage").rEvents.rebirthRemote:InvokeServer("rebirthRequest")
    end
end)
gn:Toggle("自动参加比赛", false, function(state)
    while state do
        task.wait(0.1) 
        game:GetService("ReplicatedStorage").rEvents.brawlEvent:FireServer("joinBrawl")
    end
end)
gn:Label("以下功能开启后再关闭无效[死循环]")
gn:Toggle("自动举哑铃", false, function(state) while state do task.wait() local character = game.Players.LocalPlayer.Character if character then local backpack = game.Players.LocalPlayer.Backpack for _, tool in pairs(backpack:GetChildren()) do if tool:IsA("Tool") and tool.Name == "Weight" then tool.Parent = character end end game.Players.LocalPlayer.muscleEvent:FireServer("rep") end end end)
gn:Toggle("自动俯卧撑", false, function(state) while state do task.wait(); local character = game.Players.LocalPlayer.Character; for _, tool in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do if tool:IsA("Tool") and tool.Name == "Pushups" then tool.Parent = game.Players.LocalPlayer.Character; end; end; game:GetService("Players").LocalPlayer.muscleEvent:FireServer("rep"); end; end)
gn:Toggle("自动仰卧起坐", false, function(state) while state do task.wait(); local character = game.Players.LocalPlayer.Character; for _, tool in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do if tool:IsA("Tool") and tool.Name == "Situps" then tool.Parent = game.Players.LocalPlayer.Character; end; end; game:GetService("Players").LocalPlayer.muscleEvent:FireServer("rep"); end; end)
gn:Toggle("自动倒立身体", false, function(state) while state do task.wait(); local character = game.Players.LocalPlayer.Character; for _, tool in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do if tool:IsA("Tool") and tool.Name == "Handstands" then tool.Parent = game.Players.LocalPlayer.Character; end; end; game:GetService("Players").LocalPlayer.muscleEvent:FireServer("rep"); end; end)
gn:Toggle("自动锻炼", false, function(state) while state do task.wait(); local character = game.Players.LocalPlayer.Character; for _, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do if v:IsA("Tool") and (v.Name == "Handstands" or v.Name == "Situps" or v.Name == "Pushups" or v.Name == "Weight") then local numValue = v:FindFirstChildOfClass("NumberValue"); if numValue then numValue.Value = 0; end; repeat task.wait(); until game.Players.LocalPlayer.Backpack:FindFirstChildOfClass("Tool"); local humanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid"); if humanoid then humanoid:EquipTool(v); end; game:GetService("Players").LocalPlayer.muscleEvent:FireServer("rep"); end; end; end; end)
gn:Label("-----忍者传奇-----")
gn:Button("解锁元素", function()
    for i,v in pairs(Elements) do
        game.ReplicatedStorage.rEvents.elementMasteryEvent:FireServer(v)
        print(v)
        end
end)
gn:Button("解锁岛屿", function()
    for _,v in pairs(game:GetService("Workspace").islandUnlockParts:GetChildren()) do
        firetouchinterest(game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),v,0)
        firetouchinterest(game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),v,1)
        end
end)
gn:Label("-----Doors - The Hotel-----")
gn:Toggle("瞬间互动", false, function(state)
    getgenv().InstantToggle = state
end)

game:GetService("ProximityPromptService").PromptButtonHoldBegan:Connect(function(prompt)
    if getgenv().InstantToggle then
        fireproximityprompt(prompt)
    end
end)

local old
old = hookmetamethod(game, "__namecall", newcclosure(function(self, ...)
    local args = {...}
    local method = getnamecallmethod()
    
    if tostring(self) == 'Screech' and method == "FireServer" and OrionLib.Flags["ScreechToggle"].Value == true then
        args[1] = true
        return old(self, unpack(args))
    end
    
    if tostring(self) == 'ClutchHeartbeat' and method == "FireServer" and OrionLib.Flags["HeartbeatWin"].Value == true then
        args[2] = true
        return old(self, unpack(args))
    end
    
    return old(self, ...)
end))
gn:Button("Blacking", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/KINGHUB01/BlackKing-obf/main/Doors%20Blackking%20And%20BobHub"))()
end)
gn:Toggle("高亮", false, function(Value)
_G.FullBright = Value
while _G.FullBright do
game.Lighting.Brightness = 2
game.Lighting.ClockTime = 14
game.Lighting.FogEnd = 100000
game.Lighting.GlobalShadows = false
game.Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
task.wait()
end
for i, v in pairs(_G.GetOldBright) do
game.Lighting[i] = v
end
    end)
gn:Toggle("反对Halt", false, function(Value)
_G.NoHalt = Value
local HaltShade = EntityModules:FindFirstChild("Shade") or EntityModules:FindFirstChild("_Shade")
if HaltShade then
    HaltShade.Name = _G.NoHalt and "_Shade" or "Shade"
end
    end)
gn:Toggle("反对Eyes / Lookman", false, function(Value)
_G.NoEyes = Value
while _G.NoEyes do
if workspace:FindFirstChild("Eyes") or workspace:FindFirstChild("BackdoorLookman") then
if game:GetService("ReplicatedStorage"):FindFirstChild("RemotesFolder") then
game:GetService("ReplicatedStorage"):WaitForChild("RemotesFolder"):WaitForChild("MotorReplication"):FireServer(-649)
end
end
task.wait()
end
    end)
gn:Toggle("钥匙透视", false, function(state)
    keyesp = state
    for _, cham in pairs(KeyChams) do
        cham.Enabled = state
    end
end)

local function ApplyKeyChams(inst)
    local cham = Instance.new("Highlight")
    cham.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    cham.FillColor = Color3.new(255, 105, 180)
    cham.FillTransparency = 0.5
    cham.OutlineColor = Color3.new(1, 1, 0)
    cham.Parent = inst
    cham.Adornee = inst
    cham.Enabled = keyesp
    cham.RobloxLocked = true
    return cham
end

task.spawn(function()
    workspace.CurrentRooms.DescendantAdded:Connect(function(inst)
        if inst.Name == "KeyObtain" then
            table.insert(KeyChams, ApplyKeyChams(inst))
        end
    end)
end)

task.defer(function()
    for _, v in ipairs(workspace:GetDescendants()) do
        if v.Name == "KeyObtain" then
            table.insert(KeyChams, ApplyKeyChams(v))
        end
    end
end)
gn:Toggle("柜子透视", false, function(state)
    wardrobeEsp = state
    for _, cham in pairs(WardrobeHighlights) do
        cham.Enabled = state
    end
end)

local function ApplyWardrobeHighlights(inst)
    local cham = Instance.new("Highlight")
    cham.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    cham.FillColor = Color3.new(255, 236, 0)
    cham.FillTransparency = 0.5
    cham.OutlineColor = Color3.new(1, 1, 0)
    cham.Parent = inst
    cham.Adornee = inst
    cham.Enabled = keyesp
    cham.RobloxLocked = true
    return cham
end

task.spawn(function()
    workspace.CurrentRooms.DescendantAdded:Connect(function(inst)
        if inst.Name == "Wardrobe" then
            table.insert(WardrobeHighlights, ApplyWardrobeHighlights(inst))
        end
    end)
end)

task.defer(function()
    for _, v in ipairs(workspace:GetDescendants()) do
        if v.Name == "Wardrobe" then
            table.insert(WardrobeHighlights, ApplyWardrobeHighlights(v))
        end
    end
end)
gn:Toggle("房门大范围透视", false, function(state)
    DoorEsp = state
    for _, cham in pairs(DoorHighlights) do
        cham.Enabled = state
    end
end)

local function ApplyDoorHighlights(inst)
    local cham = Instance.new("Highlight")
    cham.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    cham.FillColor = Color3.new(0, 255, 0)
    cham.FillTransparency = 0.5
    cham.OutlineColor = Color3.new(1, 1, 0)
    cham.Parent = inst
    cham.Adornee = inst
    cham.Enabled = DoorEsp
    cham.RobloxLocked = true
    return cham
end

task.spawn(function()
    workspace.CurrentRooms.DescendantAdded:Connect(function(inst)
        if inst.Name == "Door" then
            table.insert(DoorHighlights, ApplyDoorHighlights(inst))
        end
    end)
end)

task.defer(function()
    for _, v in ipairs(workspace:GetDescendants()) do
        if v.Name == "Door" then
            table.insert(DoorHighlights, ApplyDoorHighlights(v))
        end
    end
end)
gn:Label("Doors - The Mines")
gn:Toggle("无限氧气", false, function(Value)
_G.ActiveInfOxygen = Value 
while _G.ActiveInfOxygen do 
if game.Players.LocalPlayer.Character:GetAttribute("Oxygen") then
game.Players.LocalPlayer.Character:SetAttribute("Oxygen",99999)
end
task.wait()
end 
if game.Players.LocalPlayer.Character:GetAttribute("Oxygen") then
game.Players.LocalPlayer.Character:SetAttribute("Oxygen",100)
end
    end)
gn:Label("-----被遗弃-----")
gn:Toggle("发电机透视", false, function(state)
    GeneratorEsp = state
    for _, cham in pairs(GeneratorHighlights) do
        cham.Enabled = state
    end
end)

local function ApplyGeneratorHighlights(inst)
    local cham = Instance.new("Highlight")
    cham.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    cham.FillColor = Color3.new(0, 255, 0)
    cham.FillTransparency = 0.5
    cham.OutlineColor = Color3.new(1, 1, 0)
    cham.Parent = inst
    cham.Adornee = inst
    cham.Enabled = GeneratorEsp
    cham.RobloxLocked = true
    return cham
end

task.spawn(function()
    workspace.Map.DescendantAdded:Connect(function(inst)
        if inst.Name == "Generator" then
            table.insert(GeneratorHighlights, ApplyGeneratorHighlights(inst))
        end
    end)
end)

task.defer(function()
    for _, v in ipairs(workspace:GetDescendants()) do
        if v.Name == "Generator" then
            table.insert(GeneratorHighlights, ApplyGeneratorHighlights(v))
        end
    end
end)
gn:Label("-----Fisch-----")
gn:Toggle("自动摇晃", false, function(state)
    if state then
        local VirtualInputManager = game:GetService("VirtualInputManager")
        local GuiService = game:GetService("GuiService")
        local player = game.Players.LocalPlayer
        local gui = player:WaitForChild("PlayerGui")

        local function clickButton(button)
            GuiService.SelectedObject = button
            VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Return, false, game)
            VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Return, false, game)
        end

        local runningLoops = {}

        local function stopAllLoops()
            for _, loop in pairs(runningLoops) do
                loop:Disconnect()
            end
            runningLoops = {}
        end

        local function setupButtonListener()
            local connection = gui.DescendantAdded:Connect(function(descendant)
                if descendant.Name == "button" and 
                   descendant.Parent and 
                   descendant.Parent.Name == "safezone" and
                   descendant.Parent.Parent and 
                   descendant.Parent.Parent.Name == "shakeui" then
                    local loop
                    loop = task.spawn(function()
                        while descendant and descendant.Parent and state do
                            clickButton(descendant)
                            task.wait()
                        end
                    end)
                    table.insert(runningLoops, loop)
                end
            end)
            table.insert(runningLoops, connection)

            for _, descendant in ipairs(gui:GetDescendants()) do
                if descendant.Name == "button" and 
                   descendant.Parent and 
                   descendant.Parent.Name == "safezone" and
                   descendant.Parent.Parent and 
                   descendant.Parent.Parent.Name == "shakeui" then
                    local loop
                    loop = task.spawn(function()
                        while descendant and descendant.Parent and state do
                            clickButton(descendant)
                            task.wait()
                        end
                    end)
                    table.insert(runningLoops, loop)
                end
            end
        end

        setupButtonListener()
    else
        stopAllLoops()
    end
end)
gn:Toggle("水上行走", false, function(v)
    for i,v in pairs(workspace.zones.fishing:GetChildren()) do
        if v.Name == "Ocean" then
            v.CanCollide = Value
        end
    end
end)
gn:Toggle("保持白天", false, function(Value)
    		if Value then
                DayOnlyLoop = RunService.Heartbeat:Connect(function()
                    game:GetService("Lighting").TimeOfDay = "12:00:00"
                end)
            else
                if DayOnlyLoop then
                    DayOnlyLoop:Disconnect()
                    DayOnlyLoop = nil
                end
            end
        end)
gn:Label("-----黑暗欺骗-----")
gn:Button("拾取光环", function()
    local player = game.Players.LocalPlayer
    local isRunning = true
    local emptyLocation = CFrame.new(-30, 23, -50)
    local teleportCount = 0
    local batchSize = 5

    local function pickupShard(obj)
        if not obj:IsA("BasePart") then return end

        local character = player.Character or player.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

        if obj.Name == "Shard" or obj.Name == "RedShard" then
            obj.CanCollide = false
            obj.CFrame = humanoidRootPart.CFrame + Vector3.new(0, 3, 0)
            if obj:FindFirstChildWhichIsA("TouchTransmitter") then
                firetouchinterest(humanoidRootPart, obj, 0)
                firetouchinterest(humanoidRootPart, obj, 1)
            end
        elseif obj.Name == "OrangeShard" then
            humanoidRootPart.CFrame = CFrame.new(obj.Position + Vector3.new(0, -3, 0))
            task.wait(0.05)
            humanoidRootPart.CFrame = humanoidRootPart.CFrame + Vector3.new(0, 0.5, 0)
        end
    end

    local function runPickup()
        while isRunning and teleportCount < 5 do
            local shards = workspace:FindFirstChild("Shards")
            if not shards then
                task.wait(0.5)
                continue
            end

            local shardList = shards:GetChildren()

            if #shardList == 0 then
                local character = player.Character or player.CharacterAdded:Wait()
                local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

                humanoidRootPart.CFrame = emptyLocation
                teleportCount = teleportCount + 1
                print("Shadow:", teleportCount.."/5")
                task.wait(0.5)
            else
                teleportCount = 0

                for i = 1, #shardList, batchSize do
                    task.spawn(function()
                        for j = i, math.min(i + batchSize - 1, #shardList) do
                            if not isRunning then break end
                            pickupShard(shardList[j])
                        end
                    end)
                    task.wait(0.01)
                end
            end
            task.wait(0.01)
        end
    end

    local cleanup = runPickup()
    
    return function()
        isRunning = false
        if cleanup then cleanup() end
    end
end)

gn:Toggle("跳过追逐[进电梯开启]", false, function(isEnabled)
    local player = game.Players.LocalPlayer
    local running = true
    local checkInterval = 0.3
    local moveSpeed = 300
    local arrivalThreshold = 2

    local function chaseSkip()
        while running and isEnabled do
            local shards = workspace:FindFirstChild("Shards")
            if shards and #shards:GetChildren() == 0 then
                local character = player.Character
                if character then
                    local hrp = character:FindFirstChild("HumanoidRootPart")
                    local humanoid = character:FindFirstChildOfClass("Humanoid")

                    if hrp and humanoid then
                        local pos = hrp.Position
                        if (pos - Vector3.new(-29, 21, -55)).Magnitude <= 3 then
                            hrp.CFrame = CFrame.new(2, 21, 63)
                            humanoid.WalkSpeed = moveSpeed

                            local target = Vector3.new(38, 21, 63)
                            while running and isEnabled and (hrp.Position - target).Magnitude > arrivalThreshold do
                                humanoid:MoveTo(target)
                                task.wait(0.01)
                            end

                            humanoid.WalkSpeed = 16
                        end
                    end
                end
            end
            task.wait(checkInterval)
        end
    end

    local cleanup = task.spawn(chaseSkip)
    
    return function()
        running = false
        if cleanup then task.cancel(cleanup) end
    end
end)
gn:Label("-----Doors - Lobby [大厅]-----")
local maxPlayers = 1
gn:Textbox("输入人数", "1", function(Value)
    maxPlayers = tonumber(Value) or 1
    maxPlayers = math.clamp(maxPlayers, 1, 20)
    print("设置最大人数为:", maxPlayers)
end)

gn:Textbox("输入目的地", "Hotel", function(Destination)
    local args = {
        {
            Mods = {},
            Settings = {},
            Destination = Destination,
            FriendsOnly = false,
            MaxPlayers = tostring(maxPlayers)
        }
    }
    
    game:GetService("ReplicatedStorage"):WaitForChild("RemotesFolder")
        :WaitForChild("CreateElevator"):FireServer(unpack(args))
    
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "电梯创建成功",
        Text = string.format("已创建前往 %s 的电梯（最多 %d 人）", Destination, maxPlayers),
        Duration = 5,
        Icon = "rbxassetid://10800748312"
    })
end)
gn:Label("-----Doors - The Outdoors-----")
local createpart = false
local Initialize = false

gn:Toggle("初始化", false, function(state)
    createpart = state
    Initialize = state
end)

coroutine.wrap(function()
    while true do
        if Initialize then
            for _, name in ipairs(InitializeNames) do
                local objects = ReplicatedStorage:GetDescendants()
                for _, obj in ipairs(objects) do
                    if obj.Name == name then
                        obj:Destroy()
                    end
                end
            end
        end
        task.wait(0.1)
    end
end)()

game.Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        local head = character:WaitForChild("Head")
        if createpart then
            local part = Instance.new("Part")
            part.Name = "AboveHeadPart"
            part.Anchored = true
            part.Size = Vector3.new(1, 1, 1)
            part.Position = head.Position + Vector3.new(0, 1, 0)
            part.Parent = workspace
        end
    end)
end)
gn:Toggle("跳跃按键", false, function(Value)
    _G.JumpButton = Value
while _G.JumpButton do
if game.Players.LocalPlayer.Character:GetAttribute("CanJump") then
game.Players.LocalPlayer.Character:SetAttribute("CanJump", true)
end
task.wait()
end 
if game.Players.LocalPlayer.Character:GetAttribute("CanJump") then
game.Players.LocalPlayer.Character:SetAttribute("CanJump", false)
end
    end
)

gn:Toggle("删除跳杀[有BUG]", false, function(state)
    if state then
        local JumpscaresFolder = Players:FindFirstChild("Jumpscares")
        if JumpscaresFolder then
            JumpscaresFolder:Destroy()
        end
        
        local JumpscareFolder = Players:FindFirstChild("Jumpscare")
        if JumpscareFolder then
            JumpscareFolder:Destroy()
        end
        
        local Jumpscare3Folder = ReplicatedStorage:FindFirstChild("Jumpscare")
        if Jumpscare3Folder then
            Jumpscare3Folder:Destroy()
        end
    end
end)
-- 门透视
gn:Toggle("门透视", false, function(state)
    DoorEsp = state
    for _, cham in pairs(DoorHighlights) do cham.Enabled = state end
    for _, text in pairs(DoorTexts) do text.Enabled = state end
end)
local function ApplyDoorHighlights(inst)
    local cham=Instance.new("Highlight");cham.DepthMode=Enum.HighlightDepthMode.AlwaysOnTop;cham.FillColor=Color3.new(135,206,235);cham.FillTransparency=0.5;cham.OutlineColor=Color3.new(1,1,0);cham.Parent=inst;cham.Adornee=inst;cham.Enabled=DoorEsp;cham.RobloxLocked=true
    local billboard=Instance.new("BillboardGui");billboard.Name="DoorLabel";billboard.Adornee=inst;billboard.Size=UDim2.new(0,100,0,30);billboard.StudsOffset=Vector3.new(0,2,0);billboard.AlwaysOnTop=true;billboard.LightInfluence=1;billboard.ZIndexBehavior=Enum.ZIndexBehavior.Sibling;billboard.Active=true;billboard.Enabled=DoorEsp
    local textLabel=Instance.new("TextLabel");textLabel.Name="Label";textLabel.Size=UDim2.new(1,0,1,0);textLabel.BackgroundTransparency=1;textLabel.Text="门";textLabel.TextColor3=Color3.new(1,1,0);textLabel.TextSize=14;textLabel.Font=Enum.Font.SourceSansBold;textLabel.Parent=billboard
    billboard.Parent=inst;billboard.RobloxLocked=true;table.insert(ToolshedTexts,billboard)
    return cham
end
task.spawn(function() workspace.CurrentRooms.DescendantAdded:Connect(function(inst) if inst.Name=="Door" then table.insert(DoorHighlights,ApplyDoorHighlights(inst)) end end) end)
task.defer(function() for _,v in ipairs(workspace:GetDescendants()) do if v.Name=="Door" then table.insert(DoorHighlights,ApplyDoorHighlights(v)) end end end)

-- 柜子透视
gn:Toggle("柜子透视", false, function(state)
    ToolshedEsp = state
    for _, cham in pairs(ToolshedHighlights) do cham.Enabled = state end
    for _, text in pairs(ToolshedTexts) do text.Enabled = state end
end)
local function ApplyToolshedHighlights(inst)
    local cham=Instance.new("Highlight");cham.DepthMode=Enum.HighlightDepthMode.AlwaysOnTop;cham.FillColor=Color3.new(245,245,245);cham.FillTransparency=0.5;cham.OutlineColor=Color3.new(1,1,0);cham.Parent=inst;cham.Adornee=inst;cham.Enabled=ToolshedEsp;cham.RobloxLocked=true
    local billboard=Instance.new("BillboardGui");billboard.Name="ToolshedLabel";billboard.Adornee=inst;billboard.Size=UDim2.new(0,100,0,30);billboard.StudsOffset=Vector3.new(0,2,0);billboard.AlwaysOnTop=true;billboard.LightInfluence=1;billboard.ZIndexBehavior=Enum.ZIndexBehavior.Sibling;billboard.Active=true;billboard.Enabled=ToolshedEsp
    local textLabel=Instance.new("TextLabel");textLabel.Name="Label";textLabel.Size=UDim2.new(1,0,1,0);textLabel.BackgroundTransparency=1;textLabel.Text="柜子";textLabel.TextColor3=Color3.new(1,1,0);textLabel.TextSize=14;textLabel.Font=Enum.Font.SourceSansBold;textLabel.Parent=billboard
    billboard.Parent=inst;billboard.RobloxLocked=true;table.insert(ToolshedTexts,billboard)
    return cham
end
task.spawn(function() workspace.CurrentRooms.DescendantAdded:Connect(function(inst) if inst.Name=="Toolshed" then table.insert(ToolshedHighlights,ApplyToolshedHighlights(inst)) end end) end)
task.defer(function() for _,v in ipairs(workspace:GetDescendants()) do if v.Name=="Toolshed" then table.insert(ToolshedHighlights,ApplyToolshedHighlights(v)) end end end)

-- 莲花瓣透视
gn:Toggle("莲花瓣透视", false, function(state)
    LotusPetalPickupEsp = state
    for _, cham in pairs(LotusPetalPickupHighlights) do cham.Enabled = state end
    for _, text in pairs(LotusPetalPickupTexts) do text.Enabled = state end
end)
local function ApplyLotusPetalPickupHighlights(inst)
    local cham=Instance.new("Highlight");cham.DepthMode=Enum.HighlightDepthMode.AlwaysOnTop;cham.FillColor=Color3.new(255,165,0);cham.FillTransparency=0.5;cham.OutlineColor=Color3.new(1,1,0);cham.Parent=inst;cham.Adornee=inst;cham.Enabled=LotusPetalPickupEsp;cham.RobloxLocked=true
    local billboard=Instance.new("BillboardGui");billboard.Name="LotusPetalPickupLabel";billboard.Adornee=inst;billboard.Size=UDim2.new(0,100,0,30);billboard.StudsOffset=Vector3.new(0,2,0);billboard.AlwaysOnTop=true;billboard.LightInfluence=1;billboard.ZIndexBehavior=Enum.ZIndexBehavior.Sibling;billboard.Active=true;billboard.Enabled=LotusPetalPickupEsp
    local textLabel=Instance.new("TextLabel");textLabel.Name="Label";textLabel.Size=UDim2.new(1,0,1,0);textLabel.BackgroundTransparency=1;textLabel.Text="莲花瓣";textLabel.TextColor3=Color3.new(0,255,0);textLabel.TextSize=14;textLabel.Font=Enum.Font.SourceSansBold;textLabel.Parent=billboard
    billboard.Parent=inst;billboard.RobloxLocked=true;table.insert(ToolshedTexts,billboard)
    return cham
end
task.spawn(function() workspace.CurrentRooms.DescendantAdded:Connect(function(inst) if inst.Name=="LotusPetalPickup" then table.insert(LotusPetalPickupHighlights,ApplyLotusPetalPickupHighlights(inst)) end end) end)
task.defer(function() for _,v in ipairs(workspace:GetDescendants()) do if v.Name=="LotusPetalPickup" then table.insert(ToolshedHighlights,ApplyLotusPetalPickupHighlights(v)) end end end)

-- 储物箱透视
gn:Toggle("储物箱透视", false, function(state)
    Chest_VineEsp = state
    for _, cham in pairs(Chest_VineHighlights) do cham.Enabled = state end
    for _, text in pairs(Chest_VineTexts) do text.Enabled = state end
end)
local function ApplyChest_VineHighlights(inst)
    local cham=Instance.new("Highlight");cham.DepthMode=Enum.HighlightDepthMode.AlwaysOnTop;cham.FillColor=Color3.new(255,20,147);cham.FillTransparency=0.5;cham.OutlineColor=Color3.new(1,1,0);cham.Parent=inst;cham.Adornee=inst;cham.Enabled=Chest_VineEsp;cham.RobloxLocked=true
    local billboard=Instance.new("BillboardGui");billboard.Name="Chest_VineLabel";billboard.Adornee=inst;billboard.Size=UDim2.new(0,100,0,30);billboard.StudsOffset=Vector3.new(0,2,0);billboard.AlwaysOnTop=true;billboard.LightInfluence=1;billboard.ZIndexBehavior=Enum.ZIndexBehavior.Sibling;billboard.Active=true;billboard.Enabled=Chest_VineEsp
    local textLabel=Instance.new("TextLabel");textLabel.Name="Label";textLabel.Size=UDim2.new(1,0,1,0);textLabel.BackgroundTransparency=1;textLabel.Text="储物箱";textLabel.TextColor3=Color3.new(0,255,0);textLabel.TextSize=14;textLabel.Font=Enum.Font.SourceSansBold;textLabel.Parent=billboard
    billboard.Parent=inst;billboard.RobloxLocked=true;table.insert(Chest_VineTexts,billboard)
    return cham
end
task.spawn(function() workspace.CurrentRooms.DescendantAdded:Connect(function(inst) if inst.Name=="Chest_Vine" then table.insert(Chest_VineHighlights,ApplyChest_VineHighlights(inst)) end end) end)
task.defer(function() for _,v in ipairs(workspace:GetDescendants()) do if v.Name=="Chest_Vine" then table.insert(Chest_VineHighlights,ApplyChest_VineHighlights(v)) end end end)

-- 地刺透视
gn:Toggle("地刺透视", false, function(state)
    SnaresEsp = state
    for _, cham in pairs(SnaresHighlights) do cham.Enabled = state end
    for _, text in pairs(SnaresTexts) do text.Enabled = state end
end)
local function ApplySnaresHighlights(inst)
    local cham=Instance.new("Highlight");cham.DepthMode=Enum.HighlightDepthMode.AlwaysOnTop;cham.FillColor=Color3.new(255,20,147);cham.FillTransparency=0.5;cham.OutlineColor=Color3.new(1,1,0);cham.Parent=inst;cham.Adornee=inst;cham.Enabled=SnaresEsp;cham.RobloxLocked=true
    local billboard=Instance.new("BillboardGui");billboard.Name="SnaresLabel";billboard.Adornee=inst;billboard.Size=UDim2.new(0,100,0,30);billboard.StudsOffset=Vector3.new(0,2,0);billboard.AlwaysOnTop=true;billboard.LightInfluence=1;billboard.ZIndexBehavior=Enum.ZIndexBehavior.Sibling;billboard.Active=true;billboard.Enabled=SnaresEsp
    local textLabel=Instance.new("TextLabel");textLabel.Name="Label";textLabel.Size=UDim2.new(1,0,1,0);textLabel.BackgroundTransparency=1;textLabel.Text="地刺";textLabel.TextColor3=Color3.new(255,255,0);textLabel.TextSize=14;textLabel.Font=Enum.Font.SourceSansBold;textLabel.Parent=billboard
    billboard.Parent=inst;billboard.RobloxLocked=true;table.insert(SnaresTexts,billboard)
    return cham
end
task.spawn(function() workspace.CurrentRooms.DescendantAdded:Connect(function(inst) if inst.Name=="Snares" then table.insert(SnaresHighlights,ApplySnaresHighlights(inst)) end end) end)
task.defer(function() for _,v in ipairs(workspace:GetDescendants()) do if v.Name=="Snares" then table.insert(SnaresHighlights,ApplySnaresHighlights(v)) end end end)

-- 金币透视
gn:Toggle("金币透视", false, function(state)
    GoldPileEsp = state
    for _, cham in pairs(GoldPileHighlights) do cham.Enabled = state end
    for _, text in pairs(GoldPileTexts) do text.Enabled = state end
end)
local function ApplyGoldPileHighlights(inst)
    local cham=Instance.new("Highlight");cham.DepthMode=Enum.HighlightDepthMode.AlwaysOnTop;cham.FillColor=Color3.new(255,20,147);cham.FillTransparency=0.5;cham.OutlineColor=Color3.new(1,1,0);cham.Parent=inst;cham.Adornee=inst;cham.Enabled=GoldPileEsp;cham.RobloxLocked=true
    local billboard=Instance.new("BillboardGui");billboard.Name="GoldPileLabel";billboard.Adornee=inst;billboard.Size=UDim2.new(0,100,0,30);billboard.StudsOffset=Vector3.new(0,2,0);billboard.AlwaysOnTop=true;billboard.LightInfluence=1;billboard.ZIndexBehavior=Enum.ZIndexBehavior.Sibling;billboard.Active=true;billboard.Enabled=GoldPileEsp
    local textLabel=Instance.new("TextLabel");textLabel.Name="Label";textLabel.Size=UDim2.new(1,0,1,0);textLabel.BackgroundTransparency=1;textLabel.Text="金币";textLabel.TextColor3=Color3.new(1,1,0);textLabel.TextSize=14;textLabel.Font=Enum.Font.SourceSansBold;textLabel.Parent=billboard
    billboard.Parent=inst;billboard.RobloxLocked=true;table.insert(GoldPileTexts,billboard)
    return cham
end
task.spawn(function() workspace.CurrentRooms.DescendantAdded:Connect(function(inst) if inst.Name=="GoldPile" then table.insert(GoldPileHighlights,ApplyGoldPileHighlights(inst)) end end) end)
task.defer(function() for _,v in ipairs(workspace:GetDescendants()) do if v.Name=="GoldPile" then table.insert(GoldPileHighlights,ApplyGoldPileHighlights(v)) end end end)
gn:Toggle("屏蔽乌鸦叫声", false, function(state)
    if state then
        local function deleteSounds()
            for _, descendant in ipairs(workspace:GetDescendants()) do
                if descendant:IsA("Sound") and table.find(targetSoundNames, descendant.Name) then
                    descendant:Destroy()
                end
            end
        end
        
        deleteSounds()
        
        if soundLoopConnection then
            soundLoopConnection:Disconnect()
        end
        
        soundLoopConnection = game:GetService("RunService").Heartbeat:Connect(function()
            task.wait(0.1)
            deleteSounds()
        end)
    else
        if soundLoopConnection then
            soundLoopConnection:Disconnect()
            soundLoopConnection = nil
        end
    end
end)
gn:Toggle("移除地刺", false, function(state)
    isNoSnares = state
end)

coroutine.wrap(function()
    while true do
        if isNoSnares then
            for _, name in ipairs(SnaresNames) do
                local objects = Workspace:GetDescendants()
                for _, obj in ipairs(objects) do
                    if obj.Name == name then
                        obj:Destroy()
                    end
                end
            end
        end
        task.wait(0.1)
    end
end)()
gn:Toggle("屏蔽曼德拉草", false, function(state)
    if connMandrake then 
        connMandrake:Disconnect() 
        connMandrake = nil 
    end
    if state then
        for _, v in workspace:GetDescendants() do
            hideMandrake(v)
        end
        connMandrake = workspace.DescendantAdded:Connect(hideMandrake)
    end
end)
gn:Toggle("屏蔽闪电", false, function(state)
    if state then
        -- 开启时：循环强制设置为遮蔽状态
        shieldConnection = RunService.Heartbeat:Connect(function()
            -- 重写方法，强制返回"已遮蔽"
            SurgeCheck.IsCharacterSheltered = function(character)
                -- 返回[是否遮蔽, 遮蔽位置]，与原方法返回格式保持一致
                return true, character:GetPivot().Position
            end
        end)
    else
        -- 关闭时：恢复原始方法
        SurgeCheck.IsCharacterSheltered = originalIsSheltered
    end
end)
gn:Toggle("屏蔽纪念碑", false, function(state)
    isNoMonument = state
end)

coroutine.wrap(function()
    while true do
        if isNoMonument then
            for _, name in ipairs(MonumentNames) do
                local objects = Workspace:GetDescendants()
                for _, obj in ipairs(objects) do
                    if obj.Name == name then
                        obj:Destroy()
                    end
                end
            end
        end
        task.wait(0.1)
    end
end)()
gn:Label("-----森林中的99夜-----")
gn:Toggle("透视绷带",false,function(s)BandageEsp=s;for _,c in pairs(BandageHighlights)do c.Enabled=s end;for _,t in pairs(BandageTexts)do t.Enabled=s end end)
local function A(inst)
local c=Instance.new("Highlight")c.DepthMode=Enum.HighlightDepthMode.AlwaysOnTop;c.FillColor=Color3.new(255,20,147);c.FillTransparency=0.5;c.OutlineColor=Color3.new(1,1,0);c.Parent=inst;c.Adornee=inst;c.Enabled=BandageEsp;c.RobloxLocked=true
local b=Instance.new("BillboardGui");b.Name="BandageLabel";b.Adornee=inst;b.Size=UDim2.new(0,100,0,30);b.StudsOffset=Vector3.new(0,2,0);b.AlwaysOnTop=true;b.LightInfluence=1;b.ZIndexBehavior=Enum.ZIndexBehavior.Sibling;b.Active=true;b.Enabled=BandageEsp
local t=Instance.new("TextLabel");t.Name="Label";t.Size=UDim2.new(1,0,1,0);t.BackgroundTransparency=1;t.Text="绷带";t.TextColor3=Color3.new(255,255,0);t.TextSize=14;t.Font=Enum.Font.SourceSansBold;t.Parent=b
b.Parent=inst;b.RobloxLocked=true;table.insert(BandageTexts,b);return c end
task.spawn(function()workspace.Items.DescendantAdded:Connect(function(i)if i.Name=="Bandage"then table.insert(BandageHighlights,A(i))end end)end)
task.defer(function()for _,v in ipairs(workspace:GetDescendants())do if v.Name=="Bandage"then table.insert(BandageHighlights,A(v))end end end)
gn:Toggle("自动寻路[胡萝卜]",false,function(s) isCarrotEnabled=s; if s then createNotification("通知 : ","自动寻路已开启-寻物类型 : 食物[胡萝卜]",3,NotificationStyles.Success); task.spawn(autoMoveCarrots) else createNotification("通知 : ","自动寻路已关闭",3,NotificationStyles.Error) end end)
local Players=game:GetService("Players"); local PathfindingService=game:GetService("PathfindingService"); local player=Players.LocalPlayer; local character=player.Character or player.CharacterAdded:Wait(); local humanoid=character:WaitForChild("Humanoid"); local rootPart=character:WaitForChild("HumanoidRootPart")
player.CharacterAdded:Connect(function(char) character,humanoid,rootPart=char,char:WaitForChild("Humanoid"),char:WaitForChild("HumanoidRootPart") end)
local function getModelPos(m) if m then return m.PrimaryPart and m.PrimaryPart.Position or m:FindFirstChildWhichIsA("BasePart") and m:FindFirstChildWhichIsA("BasePart").Position or nil end end
local function moveToCarrot(targetPos) if humanoid and rootPart and targetPos and isCarrotEnabled then local path=PathfindingService:CreatePath({AgentRadius=2,AgentHeight=5,AgentCanJump=true,AgentJumpHeight=8,AgentMaxSlope=45}); path:ComputeAsync(rootPart.Position,targetPos); if path.Status==Enum.PathStatus.Success then for _,wp in ipairs(path:GetWaypoints()) do if not isCarrotEnabled then return end; if wp.Action==Enum.PathWaypointAction.Jump then humanoid.Jump=true end; humanoid:MoveTo(wp.Position); humanoid.MoveToFinished:Wait() end else local t0,timeout,reach=time(),8,7; humanoid:MoveTo(targetPos); while isCarrotEnabled and (rootPart.Position-targetPos).Magnitude>reach and time()-t0<timeout do task.wait(0.1) end end end end
local function getFirstCarrotModel() local items=workspace:FindFirstChild("Items"); if items then for _,obj in ipairs(items:GetChildren()) do if obj.Name=="Carrot" and obj:IsA("Model") then return obj end end end return nil end
function autoMoveCarrots() while isCarrotEnabled do local carrot=getFirstCarrotModel(); local targetPos=getModelPos(carrot); if targetPos then moveToCarrot(targetPos); if not isCarrotEnabled then break end; task.wait(3.5) else task.wait(0.5) end end end
gn:Toggle("自动寻路[浆果]",false,function(s) isBerryEnabled=s; if s then createNotification("通知 : ","自动寻路已开启-寻物类型 : 食物[浆果]",3,NotificationStyles.Success); task.spawn(autoMoveBerry) else createNotification("通知 : ","自动寻路已关闭",3,NotificationStyles.Error) end end)
local Players=game:GetService("Players"); local PathfindingService=game:GetService("PathfindingService"); local player=Players.LocalPlayer; local character=player.Character or player.CharacterAdded:Wait(); local humanoid=character:WaitForChild("Humanoid"); local rootPart=character:WaitForChild("HumanoidRootPart")
player.CharacterAdded:Connect(function(char) character,humanoid,rootPart=char,char:WaitForChild("Humanoid"),char:WaitForChild("HumanoidRootPart") end)
local function getModelPos(m) if m then return m.PrimaryPart and m.PrimaryPart.Position or m:FindFirstChildWhichIsA("BasePart") and m:FindFirstChildWhichIsA("BasePart").Position or nil end end
local function moveToBerry(targetPos) if humanoid and rootPart and targetPos and isBerryEnabled then local path=PathfindingService:CreatePath({AgentRadius=2,AgentHeight=5,AgentCanJump=true,AgentJumpHeight=8,AgentMaxSlope=45}); path:ComputeAsync(rootPart.Position,targetPos); if path.Status==Enum.PathStatus.Success then for _,wp in ipairs(path:GetWaypoints()) do if not isBerryEnabled then return end; if wp.Action==Enum.PathWaypointAction.Jump then humanoid.Jump=true end; humanoid:MoveTo(wp.Position); humanoid.MoveToFinished:Wait() end else local t0,timeout,reach=time(),8,7; humanoid:MoveTo(targetPos); while isBerryEnabled and (rootPart.Position-targetPos).Magnitude>reach and time()-t0<timeout do task.wait(0.1) end end end end
local function getFirstBerryModel() local items=workspace:FindFirstChild("Items"); if items then for _,obj in ipairs(items:GetChildren()) do if obj.Name=="Berry" and obj:IsA("Model") then return obj end end end return nil end
function autoMoveBerry() while isBerryEnabled do local berry=getFirstBerryModel(); local targetPos=getModelPos(berry); if targetPos then moveToBerry(targetPos); if not isBerryEnabled then break end; task.wait(3.5) else task.wait(0.5) end end end
gn:Dropdown("选择医疗用品", medicalItems, true, true, function(options)
    selectedMedicalItems = options
end)
gn:Button("获取医疗用品", false, function()
    local p = game.Players.LocalPlayer.Character
    if not p or not p:FindFirstChild("HumanoidRootPart") then return end
    local t = p.HumanoidRootPart.Position + Vector3.new(2, 0, 0)
    for _,n in ipairs(selectedMedicalItems)do for _,i in ipairs(workspace:GetDescendants())do if(i.Name==n and(i:IsA("BasePart")or i:IsA("Model"))and(i.PrimaryPart or i:FindFirstChildWhichIsA("BasePart")))then moveItemToPos(i,t)end end end
end)
gn:Toggle("无敌模式", false, function(state)
        if plr.Character and plr.Character:FindFirstChild("Humanoid") then
            if state then
                plr.Character.Humanoid.MaxHealth = math.huge
                plr.Character.Humanoid.Health = math.huge
            else
                plr.Character.Humanoid.MaxHealth = 100
                plr.Character.Humanoid.Health = 100
            end
        end
    end)
gn:Textbox("设置速度", "16", function(Value)  
    local speed = tonumber(Value) or 16  
    speed = math.clamp(speed, 16, 200)  
    local plr = game.Players.LocalPlayer 
    if plr.Character and plr.Character:FindFirstChild("Humanoid") then  
        plr.Character.Humanoid.WalkSpeed = speed 
    end  
end)
gn:Button("回到营地", function()
        if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
            plr.Character.HumanoidRootPart.CFrame = CFrame.new(13.287, 3.999, 0.362)
        end
    end)
gn:Dropdown("选择孩子", currentMobNames, false, true, function(options)
    selectedMob = options[#options] or currentMobNames[1] or nil
end)
gn:Button("刷新列表", false, function()
        currentMobs, currentMobNames = getMobs()
        if #currentMobNames > 0 then
            selectedMob = currentMobNames[1]
            MobDropdown:Refresh(currentMobNames)
        else
            selectedMob = nil
            MobDropdown:Refresh({ "无查找到孩子" })
        end
    end)
gn:Button("传送到孩子", false, function()
        if selectedMob and currentMobs then
            for i, name in ipairs(currentMobNames) do
                if name == selectedMob then
                    local targetMob = currentMobs[i]
                    if targetMob then
                        local part = targetMob.PrimaryPart or targetMob:FindFirstChildWhichIsA("BasePart")
                        if part and game.Players.LocalPlayer.Character then
                            local hrp = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                            if hrp then
                                hrp.CFrame = part.CFrame + Vector3.new(0, 5, 0)
                            end
                        end
                    end
                    break
                end
            end
        end
    end)
gn:Toggle("快速互动", false, function(state)
        instantInteractEnabled = state
        if state then
            originalHoldDurations = {}
            instantInteractConnection = task.spawn(function()
                while instantInteractEnabled do
                    for _, obj in ipairs(workspace:GetDescendants()) do
                        if obj:IsA("ProximityPrompt") then
                            if originalHoldDurations[obj] == nil then
                                originalHoldDurations[obj] = obj.HoldDuration
                            end
                            obj.HoldDuration = 0
                        end
                    end
                    task.wait(0.5)
                end
            end)
        else
            if instantInteractConnection then
                instantInteractEnabled = false
            end
            for obj, value in pairs(originalHoldDurations) do
                if obj and obj:IsA("ProximityPrompt") then
                    obj.HoldDuration = value
                end
            end
            originalHoldDurations = {}
        end
    end)
